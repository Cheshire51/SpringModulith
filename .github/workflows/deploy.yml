name: build push image for deployment
on:
  push:
    branches:
      - main
env:
  job_env: ssss
jobs:
  sample-job-section:
    environment: action
    runs-on: ubuntu-latest
    env:
      SOME_DATA: some-data
    steps:
      - name: Print something
        run: echo "I am printing something"
      - name: Show host environment variables
        run: echo "some data ${{env.SOME_DATA}} actuator endpoints ${{vars.ACTUATOR_EXPOSED_ENDPOINTS}}"
      - name: print job env
        env:
          step_level_env: stepEnv
        run: echo "job env ${{env.job_env}}   step env ${{env.step_level_env}}"


  build-job-section:
    environment: action
    runs-on: ubuntu-latest

    container: postgres
    services:
      postgres:
        image: 'postgres:latest'
        env:
          POSTGRES_DB: ${{vars.MODULITH_DB_NAME}}
          POSTGRES_PASSWORD: ${{ secrets.MODULITH_PASSWORD }}
          POSTGRES_USER: ${{secrets.MODULITH_USERNAME}}
        ports:
          - '5432:5432'

    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "23"
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
      - name: Output Info
        run: ls

      - name: show host environment variables
        run: echo "host ${{ vars.MODULITH_HOST}}  db name  ${{vars.MODULITH_DB_NAME}}"

      - name: run maven test
        env:
          MODULITH_USERNAME: ${{ secrets.MODULITH_USERNAME }}
          MODULITH_PASSWORD: ${{ secrets.MODULITH_PASSWORD }}
          MODULITH_HOST: ${{ vars.MODULITH_HOST }}
          MODULITH_PORT: ${{ vars.MODULITH_PORT }}
          MODULITH_DB_NAME: ${{ vars.MODULITH_DB_NAME }}
        run: mvn clean test

      - name: Build with Maven
        run: mvn clean package -DskipTests -Dspring-boot.run.profiles=${{vars.SPRING_PROFILE}}
      - name: list files
        run: ls target/**

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spring-modulith-artifact
          path: |
            target/*.jar
            Dockerfile
          overwrite: 'true'
          retention-days: 5



  push-image-section:
    environment: action
    needs: build-job-section
    runs-on: ubuntu-latest
    steps:
      - name: print something
        run: echo "job env ${{env.job_env}}"

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: spring-modulith-artifact

      - name: Output downloaded files
        run: ls && ls target/**

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-modulith:1.0
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}


